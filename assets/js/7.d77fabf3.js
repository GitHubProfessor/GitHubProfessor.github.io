(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{356:function(s,a,n){"use strict";n.r(a);var e=n(42),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"redis-面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis-面试题"}},[s._v("#")]),s._v(" Redis 面试题")]),s._v(" "),n("h5",{attrs:{id:"_1-核心数据结构有哪些-string类型都有哪些特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-核心数据结构有哪些-string类型都有哪些特点"}},[s._v("#")]),s._v(" 1.核心数据结构有哪些？String类型都有哪些特点？")]),s._v(" "),n("ul",[n("li",[s._v("String：字符串类型"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> set name john\nOK\n> get name\n"john"\n> set name1 1.3\nOK\n> get name1\n"1.3"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])]),s._v(" "),n("li",[s._v("List：列表类型"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> LPUSH mylist "world"\n(integer) 1\n> LPUSH mylist "hello"\n(integer) 2\n> LRANGE mylist 0 -1\n1) "hello"\n2) "world"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])]),s._v(" "),n("li",[s._v("Set：无序集合类型"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> sadd names xiaoming\n(integer) 1\n> sadd names xiaohong\n(integer) 1\n> smembers names\n1) "xiaohong"\n2) "xiaoming"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])]),s._v(" "),n("li",[s._v("ZSet：有序集合类型"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> zadd languages 1 redis\n(integer) 1\n> zadd languages 2 mongodb\n(integer) 1\n> zadd languages 3 mysql\n(integer) 1\n> zadd languages 4 mysql\n(integer) 0\n> zrange languages 0 -1 withscores\n1) "redis"\n2) 1.0\n3) "mongodb"\n4) 2.0\n5) "mysql"\n6) 4.0\n> zrange languages 0 -1\n1) "redis"\n2) "mongodb"\n3) "mysql"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])])]),s._v(" "),n("li",[s._v("Hash：哈希表类型"),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('> hset myhash key1 value1\n(integer) 1\n> hset myhash key2 value2\n(integer) 1\n> hgetall myhash\n1) "key1"\n2) "value1"\n3) "key2"\n4) "value2"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])]),s._v(" "),n("h5",{attrs:{id:"_2-值类型中hash和string有什么区别-实际工作中如何选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-值类型中hash和string有什么区别-实际工作中如何选择"}},[s._v("#")]),s._v(" 2.值类型中hash和string有什么区别？实际工作中如何选择？")]),s._v(" "),n("span",{staticStyle:{color:"#9e9e9e","font-size":"9px"}},[s._v("\nRedis hash 是一个 string 类型的 field 和 value 的 映射表。它的添加、删除操作都是 0(1)（平均操作）。"),n("br"),s._v(" \nhash特别适合用于存储对象。相较于将对象的每个字段存成单个 string 类型（string 类型可以存储对象序列化）。 \n将一个对象存储在 hash 类型中会占用更少的内存，并且可以更方便的存取整个对象。 \n（省内存的原因是新建一个 hash 对象时开始是用 zipmap（又称为 small hash）来存储的。 \n这个 zipmap 其实并不是 hash table，但是 zipmap 相比正常的 hash 实现可以节省不少 hash 本身需要的一些元数据存储开销。\n")]),s._v(" "),n("h5",{attrs:{id:"_3-持久化是如何工作的-redis在持久化过程中可以对外服务么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-持久化是如何工作的-redis在持久化过程中可以对外服务么"}},[s._v("#")]),s._v(" 3.持久化是如何工作的？Redis在持久化过程中可以对外服务么？")]),s._v(" "),n("span",{staticStyle:{color:"#9e9e9e","font-size":"9px"}},[s._v("\n我们都知道，redis是基于内存的K-V数据库。由于内存是断电易失的，所以redis提供了相应的持久化机制"),n("br"),s._v("\n持久化有两种方式："),n("br"),s._v("\n1.rdb"),n("br"),s._v("\n2.aof"),n("br"),s._v("\nredis在持久化的过程中是可以对外服务的。\n")]),s._v(" "),n("h5",{attrs:{id:"_4-持久化方式rdb和aof的原理和优缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-持久化方式rdb和aof的原理和优缺点"}},[s._v("#")]),s._v(" 4.持久化方式rdb和aof的原理和优缺点")]),s._v(" "),n("h5",{attrs:{id:"_5-内存不足时-如何处理新的请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-内存不足时-如何处理新的请求"}},[s._v("#")]),s._v(" 5.内存不足时，如何处理新的请求")]),s._v(" "),n("h5",{attrs:{id:"_6-如何处理过期数据的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何处理过期数据的"}},[s._v("#")]),s._v(" 6.如何处理过期数据的？")]),s._v(" "),n("h5",{attrs:{id:"_7-内存淘汰算法-lru-lfu可以讲一下原理么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-内存淘汰算法-lru-lfu可以讲一下原理么"}},[s._v("#")]),s._v(" 7.内存淘汰算法 LRU/LFU可以讲一下原理么？")]),s._v(" "),n("h5",{attrs:{id:"_8-有序数据结构zset底层原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-有序数据结构zset底层原理"}},[s._v("#")]),s._v(" 8.有序数据结构zset底层原理？")]),s._v(" "),n("h5",{attrs:{id:"_9-位图应用场景以及实现原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-位图应用场景以及实现原理"}},[s._v("#")]),s._v(" 9.位图应用场景以及实现原理？")]),s._v(" "),n("h5",{attrs:{id:"_10-缓存穿透-缓存雪崩-缓存重建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-缓存穿透-缓存雪崩-缓存重建"}},[s._v("#")]),s._v(" 10.缓存穿透/缓存雪崩/缓存重建？")]),s._v(" "),n("h5",{attrs:{id:"_11-集群分片原理是怎样的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-集群分片原理是怎样的"}},[s._v("#")]),s._v(" 11.集群分片原理是怎样的？")]),s._v(" "),n("h5",{attrs:{id:"_12-单线程和redis6-0多线程是如何工作的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_12-单线程和redis6-0多线程是如何工作的"}},[s._v("#")]),s._v(" 12.单线程和Redis6.0多线程是如何工作的？")])])}),[],!1,null,null,null);a.default=t.exports}}]);